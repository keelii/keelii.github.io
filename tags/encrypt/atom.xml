<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Encrypt on Something</title>
    <link>https://keelii.github.io/tags/encrypt/</link>
    <description>Recent content in Encrypt on Something</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 12 Jun 2016 18:04:47 +0800</lastBuildDate>
    
        <atom:link href="https://keelii.github.io/tags/encrypt/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>免费 https 证书（Let&#39;s Encrypt）申请与配置</title>
      <link>https://keelii.github.io/2016/06/12/free-https-cert-lets-encrypt-apply-install/</link>
      <pubDate>Sun, 12 Jun 2016 18:04:47 +0800</pubDate>
      
      <guid>https://keelii.github.io/2016/06/12/free-https-cert-lets-encrypt-apply-install/</guid>
      <description>&lt;p&gt;之前要申请免费的 https 证书操作步骤相当麻烦，今天看到有人在讨论，就搜索了一下。发现现在申请步骤简单多了。
&lt;/p&gt;

&lt;h2 id=&#34;1-下载-certbot&#34;&gt;1. 下载 certbot&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/certbot/certbot
cd certbot
./certbot-auto --help
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解压打开执行就会有相关提示&lt;/p&gt;

&lt;h2 id=&#34;2-生成免费证书&#34;&gt;2. 生成免费证书&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./certbot-auto certonly --webroot --agree-tos -v -t --email 邮箱地址 -w 网站根目录 -d 网站域名
./certbot-auto certonly --webroot --agree-tos -v -t --email keeliizhou@gmail.com -w /path/to/your/web/root -d note.crazy4code.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt; 这里 默认会自动生成到 /&lt;strong&gt;网站根目录&lt;/strong&gt;/.well-known/acme-challenge 文件夹，然后 shell 脚本会对应的访问 &lt;strong&gt;网站域名&lt;/strong&gt;/.well-known/acme-challenge 是否存在来确定你对网站的所属权&lt;/p&gt;

&lt;p&gt;比如：我的域名是 &lt;strong&gt;note.crazy4code.com&lt;/strong&gt; 那我就得保证域名下面的 &lt;strong&gt;.well-known/acme-challenge/&lt;/strong&gt; 目录是可访问的&lt;/p&gt;

&lt;p&gt;如果返回正常就确认了你对这个网站的所有权，就能顺利生成，完成后这个目录会被清空&lt;/p&gt;

&lt;h2 id=&#34;3-获取证书&#34;&gt;3. 获取证书&lt;/h2&gt;

&lt;p&gt;如果上面的步骤正常 shell 脚本会展示如下信息：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- Congratulations! Your certificate and chain have been saved at
/etc/letsencrypt/live/网站域名/fullchain.pem
...
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;4-生成-dhparams&#34;&gt;4. 生成 dhparams&lt;/h2&gt;

&lt;p&gt;使用 openssl 工具生成 dhparams&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;openssl dhparam -out /etc/ssl/certs/dhparams.pem 2048
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;5-配置-nginx&#34;&gt;5. 配置 Nginx&lt;/h2&gt;

&lt;p&gt;打开 nginx server 配置文件加入如下设置：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;listen 443

ssl on;
ssl_certificate /etc/letsencrypt/live/网站域名/fullchain.pem;
ssl_certificate_key /etc/letsencrypt/live/网站域名/privkey.pem;
ssl_dhparam /etc/ssl/certs/dhparams.pem;
ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
ssl_ciphers HIGH:!aNULL:!MD5;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后重启 nginx 服务就可以了&lt;/p&gt;

&lt;h2 id=&#34;6-强制跳转-https&#34;&gt;6. 强制跳转 https&lt;/h2&gt;

&lt;p&gt;https 默认是监听 443 端口的，没开启 https 访问的话一般默认是 80 端口。如果你确定网站 80 端口上的站点都支持 https 的话加入下面的配件可以自动重定向到 https&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;server {
    listen 80;
    server_name your.domain.com;
    return 301 https://$server_name$request_uri;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;7-证书更新&#34;&gt;7. 证书更新&lt;/h2&gt;

&lt;p&gt;免费证书只有 90 天的有效期，到时需要手动更新 renew。刚好 Let&amp;rsquo;s encrypt 旗下还有一个 &lt;a href=&#34;https://letsmonitor.org/&#34;&gt;Let&amp;rsquo;s monitor&lt;/a&gt; 免费服务，注册账号添加需要监控的域名，系统会在证书马上到期时发出提醒邮件，非常方便。收到邮件后去后台执行 renew 即可，如果提示成功就表示 renew 成功&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./certbot-auto renew
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>