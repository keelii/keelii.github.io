<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on 臨池不輟</title>
    <link>https://keelii.com/tags/programming/</link>
    <description>Recent content in programming on 臨池不輟</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 25 Aug 2019 18:33:57 +0800</lastBuildDate>
    
        <atom:link href="https://keelii.com/tags/programming/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>漫谈哲学与编程</title>
      <link>https://keelii.com/2019/08/25/philosophy-and-programming/</link>
      <pubDate>Sun, 25 Aug 2019 18:33:57 +0800</pubDate>
      
      <guid>https://keelii.com/2019/08/25/philosophy-and-programming/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://i.v2ex.co/nfs1f0Yn.jpeg&#34; alt=&#34;philosophy and programming&#34; /&gt;&lt;/p&gt;

&lt;p&gt;谈到哲学，多数人都会直觉性的认为它是很高深的一门学问。实际上大多数情况并非如此，哲学研究的往往是非常简单的一些命题，而这些命题在常人看来可能并没有现实意义。&lt;/p&gt;

&lt;p&gt;比如说：到底是先有鸡还是先有蛋的问题；比如说：一个号称只给不能给自己理发的人理发的理发师到底能不能给自己理发的问题。当然本文的目的并不在于讨论这两个问题，我们来聊聊几个稍微简单一些的概念：&lt;/p&gt;

&lt;h3 id=&#34;哲学中的理性与感性&#34;&gt;哲学中的理性与感性&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;理性是超越的，本质在于追求无限&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;超越&lt;/strong&gt;的意思是说理性本身不依赖任何现实或者经验社会中的任何对象，&lt;strong&gt;无限&lt;/strong&gt;实际上就是说理性本身需要达到的某种理想状态。&lt;/p&gt;

&lt;p&gt;比方说：「&lt;strong&gt;100%的金」&lt;/strong&gt; 就是一种无限状态。我们不使用任何经验就可以判断出 100% 的金是必然有的，概念上没人能否定这一点。&lt;/p&gt;

&lt;p&gt;但是运用在经验社会中的知识来判断，这个命题就是不正确的，或者说不具有*普遍*的正确性。因为我们知道无论人类的技术如何高超也无法制造出来 100% 的金。即使到 99.99% 逻辑上也没到达 100%。&lt;/p&gt;

&lt;p&gt;这个时候人们对于类似的事情就会产生了不同的反应。有的人会因为理想状态达不到而&lt;strong&gt;反向&lt;/strong&gt;地认为原来的命题是错误的；有的人内心则有一种说不清道不明的东西指引着他，不会因为到达不到无限状态而肯定整个命题。&lt;/p&gt;

&lt;p&gt;这个问题也一直困扰了我很久，因为在现实生活中在你看来很多明显正确的事情忽出现了一个反例，结果就会有一堆人来告诉你你错了。&lt;/p&gt;

&lt;p&gt;德国哲学家康德在《&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E7%BA%AF%E7%B2%B9%E7%90%86%E6%80%A7%E6%89%B9%E5%88%A4&#34;&gt;纯粹理性批判&lt;/a&gt;》这本书中给出了一种解释：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;理性的调节性是引导经验去追求无限，追求绝对，但是永远也达不到。达不到也有作用 — 它使得经验科学不断的前进，并且有了明确的目的和方向…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;类似的哲学观点好就好在一但明白了其中的本质和它阐述的真理以后，它就可以在某种层次上解释经验世界的各种现象。这或许就是大家说的哲学是任何其它学科的奠基，是第一学科的原因。&lt;/p&gt;

&lt;p&gt;对应的在编程领域也有一些无限的概念，对于多数前端工程师来讲「实现一个无限级的下拉菜单」似乎也在表达着一种无限状态。当然用户在使用的时候根本不可能用到无限级的菜单，无限级的菜单在交互方面也也是极其反人类的，一步可以做到的事情没人愿意多增加一步。但是为什么程序员们热衷于实现这种类似的无限状态。实际上这就是理性的力量，总有一种说不清楚的力量在引导着你，你也没法解释。&lt;/p&gt;

&lt;p&gt;理解了这一点你就会有一个很简单的评判程序好坏的论点，即：程序或者代码是否表现了某种&lt;strong&gt;无限&lt;/strong&gt;状态？如果你的程序函数里面只是几个简单的 if else，那你有没有考虑过如果当输入不断的增加或者变化时，原来的代码是否还可以正常返回。或者说在不考虑硬件等客观条件的前提下，你的程序是否存在极限状态。&lt;/p&gt;

&lt;p&gt;我们经常在知乎或者其它论坛上争论一些问题，本质上讲大家都没有区分清楚自己对于一个论点的&lt;strong&gt;逻辑认知&lt;/strong&gt;和&lt;strong&gt;情感认知&lt;/strong&gt;。太多人喜欢用自己的感情认知去否定逻辑事实，以至于争来争去谁也没能说服谁，试图用唯心观点去解释唯物的现象或者相反，这是极其不正确的。&lt;/p&gt;

&lt;p&gt;一个典型的问题是我不久之前在知乎上回答的一个问题：&lt;a href=&#34;https://www.zhihu.com/question/309891718&#34;&gt;谁能大致说下vue和react的最大区别之处&lt;/a&gt;？我的回答简单总结就两句话：Vue 有一种设计层面追求的简洁感性之美，React 则是一种数学层面的逻辑一致之美。本质上讲没有什么好坏之分。但是诸如些类的一些前端框架问题正在变成一种帮派化的「站队」风气。&lt;/p&gt;

&lt;h3 id=&#34;编程中的低阶-low-level-与高阶-hight-level&#34;&gt;编程中的低阶（low-level）与高阶（hight-level）&lt;/h3&gt;

&lt;p&gt;注意这里讲的 low/hight level 并不是计算机术语中特定的某种形式。&lt;/p&gt;

&lt;p&gt;有个笑话是这么讲的：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;一个程序员去相亲，程序员自己介绍说「我是做嵌入式C语言底层开发的」，妹子反问「那啥时候做到高层开发呢」？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;程序员们内心都有一个做底层开发的梦，因为这才是一个真正的程序员的追求与理想。&lt;/p&gt;

&lt;p&gt;但是现实往往相反，大多数程序员每天都在写业务代码（重复的 CRUD）。所以很多程序员得出来一个结论就是：越底层的东西越重要，越高层的东西越肤浅。通常这也会行成一条鄙视链，他们会不由自主地忽略高层的东西。&lt;/p&gt;

&lt;p&gt;注意这里有两个问题：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;业务代码有没有价值？&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;当然有了，业务部分的代码是系统的最终结果。从结果导向上讲底层代码如何优雅、实现如何科学我们根本不关心，我们更关心整个系统层面的稳定与健壮。这是一种领导的高层次视角。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;底层的东西就一定重要？&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;并不一定，这里说的不一定不是要完全否定底层的重要性。恰恰相反，软件领域一些特别优秀或者说伟大的软件底层并不是那么的如人意。比方说微软开发的 VSCode 代码编辑器。要是从底层去讨论它的构架合理性那确实挺像一个笑话的。因为本质上讲 VSCode 基于 electron，它把编辑器放在了一个 webview 中去运行，但是 webview 是用来浏览网页的，而且 electron 居然把 NodeJS 运行时也整合进去，以至于最小的一个应用解压完也有上百兆。&lt;/p&gt;

&lt;p&gt;这感觉就像是上学的时候你很期待一个数学教授教你数学课，但是实际上你的数学课却是一个体育老师带的，这不是可不可以的问题对吧。&lt;/p&gt;

&lt;p&gt;然而 VSCode 这样做的结果是：它还真的成功了，而且编辑器的性能比很多原生软件做的都要好，以至于周围所有人都在使用它，VSCode 在 Github 上名列前茅，也改变了很多程序员对于微软的刻板印象。&lt;/p&gt;

&lt;p&gt;如果我们再回过头从哲学的角度去思考这个问题，实际上计算机中的&lt;strong&gt;底层&lt;/strong&gt;与&lt;strong&gt;高层&lt;/strong&gt;正好对应着哲学中的&lt;strong&gt;理性&lt;/strong&gt;与&lt;strong&gt;感性&lt;/strong&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;底层更注重逻辑严谨，因为这是构建高层建筑的基础，它面向的是理论&lt;/li&gt;
&lt;li&gt;高层更注重表现形式，因为高层的部分呈现出来的是一个完整的系统，它面向的对象是人。是人，那需求就是多样化的，因为人的想法总是特别的感性&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;理性的认知是有对错可以批判的，但是感性的直观是没有对错的，因为即使是同一种声音、颜色对不同人观感都是不一样的。&lt;/p&gt;

&lt;p&gt;比如说你在火车上看书，对面的人说话声音太大吵到了你。你说：你们说话小声点可以吗？对方会说：车上这么多人说话为啥就我们吵到你了？你说：因为就你们声音最大。对方说：我咋没觉得？&lt;/p&gt;

&lt;h3 id=&#34;现实中的主观与客观&#34;&gt;现实中的主观与客观&lt;/h3&gt;

&lt;p&gt;现实生活中我们经常会遇到一些对于论点的评价：主观还是客观。但是很多人没搞清楚这两个词的关系。多数人都觉得客观的观点就是好的，主观的就是臆断的。&lt;/p&gt;

&lt;p&gt;主观和客观的关系就像是主人与客人的关系一样，有的人会认为应该主随客便，有的人则认为应该是客随主便。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;如果一个人表达的观点全是主观的，那我们会认为这些观点是不可以讨论与评判的，不经过讨论批判的观点是站不住脚的。&lt;/li&gt;
&lt;li&gt;如果一个人表达的观点全是客观的，那似乎也不对，因为这些观点全是别人的，你可能忽略了自己的意识，最终只能游走在别人的规则中。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;任何语言中都有那么一些词语是成对儿出现的，像因果、主客、高低，这些词在被造出来的时候就是成对出现的，缺一不可。没有前者，后者将不会单独存在。它们之间没有绝对性的对于错。如果有，那对方就没有了存在的意义，反过来自己也将不存在。&lt;/p&gt;

&lt;p&gt;当有人抛出一个观点的时候我的经验是一定要听清楚对方说的是「我觉得」还是「我认为」。「我觉得」那必然就是人家的主观感受，这种观点我们就没必要讨论了。你应该回复：「嗯，没错，确实是这样的。」。如果对方说「我认为」那你要是有不同的观点就完全可以和他讨论，因为说「我认为」的观点必然是有一些客观事实做为依据的，有事实有逻辑，那就可以有对错。&lt;/p&gt;

&lt;h3 id=&#34;结语&#34;&gt;结语&lt;/h3&gt;

&lt;p&gt;哲学中的知识并不能完全解释现实中的事物，因为哲学研究的终点是一些没有结论的东西：上帝、自由、灵魂不朽。这些东西并非常人能理解的，但是人们对于无限真理的追求驱使着大家去研究它，很多人会觉得既然研究不出来结果那是不是就没意义了，当然不是。事实恰恰相反，如果我们把所有的事物本质都研究清楚了，那我们的存在也将失去意义。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>